[{"content":"","date":"2025-04-09T22:39:16+08:00","image":"https://skyhaibara.github.io/Cover/SHR.webp","permalink":"https://skyhaibara.github.io/p/playing/","title":"Playing"},{"content":"考公 新闻（20250324启） 25-29日全国大部降温8~12℃℃，北方有大范围风沙，淮南局地有强对流天气; 官方:我国将增加城乡居民收入，优化收入分配结构，让消费者有钱能消费; 清明小长假火车票陆续开售，假期“踏青赏花”相关搜索热度同比上涨46%; 合肥联合调查组:三只羊公司整改符合要求，具备恢复经营条件; 《哪吒》系列电影总票房破200亿，饺子成中国影史首位200亿票房导演; 福耀科技大学:首届招100人以内，年学费5460元，大四到境外名校学习一年; 意大利出版世界首份AI报纸，文章的标题、摘要、内容等均由人工智能生成; 尹锡悦、韩德洙、李在明案或在下周陆续宣判，韩国迎来“撼动政局”关键一周; 本轮巴以冲突已致加沙地带超5万人死亡; 加拿大和部分欧洲国家提醒本国公民谨慎赴美，可能被逮捕或遭拘押; 美联储2024年亏损高达5600亿元，预示要再降200基点才能收支平衡; 刚果(金)总统致信特朗普，如能帮助击败反政府武装，愿提供关键矿产资源; 【微语】在春天，翻阅绿色的群山。群山不再是群山，群山遍地都是。 0325 我国现有60-65岁低龄老人9000万，财富储备相对充足，消费意愿强烈，银发经济潜力巨大; 我国发现首个亿吨级页岩油田，坐标山东淄博; 60年间七千条冰川从我国消失，主要原因是全球气候变暖; 报告显示:人工智能成跳槽新选择，57.2%的职场人考虑从事AI类职业; 长沙:中考取消生物地理，总分降为630分，体育中考满分增至50分; 安徽蚌埠全市试行作业熔断机制，家长签字后学生可不完成当天作业; 青海多地就整治违规收礼再动员，3076人上缴礼金2095万元; 香港:4月7日起乘客不得在航班上使用充电宝，且不得放置于行李架上; 韩市民团体:宪法法院再不罢免尹锡悦，将举行总罢工;微信搜:每日资讯简报 土耳其爆发十多年来最严重骚乱，因抓捕反对党领袖引发示威; 以色列批准设立自愿移民事务局，为“自愿”迁往第三国加沙居民提供支持; 特朗普宣布对从委内瑞拉购买石油和天然气的国家征收25%关税; 【微语】你存在世界就存在，你没了世界也就没了。去逛吧，世界本就是你的后花园。 0326 寒潮、大风、沙尘暴、大雾四预警齐发:华北、江淮、江南等地局地降温将超20℃C; 清明假期4月4日(周五)至4月6日放假三天，不调休，小客车高速免费通行; 国家级撑腰来了，修订后的《保障中小企业款项支付条例》6月起施行; 中消协提示:网络购物非必要不开启“免密支付”，易成盗刷漏洞; 上海加强治理一边走路一边抽烟; 2000年1月1日0时0分出生的“世纪婴儿”千千因心源性猝死于山西长治，其母称有“严重医疗事故”，当地卫健委介入; 世预赛:国足主场0比2不敌澳大利亚，18强赛再遭三连败，无缘直通世界杯; 卢卡申科第七次宣誓就任白俄罗斯总统; 印度打算放宽对华贸易和投资限制，向美国发出信号以对冲关税压力; 韩国东南部大型山火已造成19人死亡; 克宫证实俄方向金正恩发出访问邀请; 美发布与俄乌会谈声明:同意确保黑海航行安全，禁止袭击能源设施; 【微语】路不通就转弯，心不悦就看淡。愿你有前进一寸的勇气，亦有后退一尺的从容 0327 教育部:校外教育培训机构应入驻或接入全国平台，主动将预收费全额纳入监管; 国台办网站设举报“台独”恶劣行径专栏，11名“台独”打手和帮凶名单公布; 公安部:零容忍打击假冒伪劣老妇幼卫生用品;微信搜:每日资讯简报 北京:新修订消防条例5月施行，严禁电动自行车进电梯，个人最高可罚1000元; 广东拟规范中小学招生入学:推动多孩子女义务教育同校就读; 广东已连续18年蝉联中国人口第一大省，连续7年成为第一生育大省; 长沙中考新政:高层次人才子女享受优待，不用参加统考; 我国短视频用户超10亿，人均每天刷短视频156分钟，居所有应用首位; 60岁以上老人租房难成普遍现象; 雷军重返高中母校，捐款5000万元;苹果CEO库克访问浙大捐赠鮃聵讎姒仰贖砜凇漚挰犼莱勍觊蛭缋锲洹摣嘗崴鸕糖莓坝桥迨先; 李在明涉嫌违反《公职选举法》案二审推翻一审判决，判定无罪; 以总理:哈马斯不放人就吞并更多加沙领土;微信搜:每日资讯简报 泽连斯基:乌军没钱了，呼吁西方资助 特朗普签署行政令，要求选民提供美公民身份证明; 特朗普宣布对所有进口汽车征收25%关税; 【微语】生活不是你活过的样子，而是你记住的样子。 0328 食品安全新国标:不允许再使用“零添加”等用语对食品配料进行特别强调; 教育部:严查招生入学环节腐败问题; 深圳官宣房票制度，四大一线城市均已开始探索; 青岛:延长住房公积金贷款借款人年龄上限，男68岁女63岁; 致25车坠河，62人死亡失踪!陕西丹宁高速桥梁垮塌灾害43人被问责; 微信小程序上线“附近的工作”功能，主要是解决零工难题; 张一鸣超钟睦睒、马化腾成中国新首富，雷军2200亿元首次进入中国前十; 世界顶流网红“甲亢哥”中国行，让全球了解真实中国; 日本严重关切中国国防预算上涨，国防部:日本最没资格指手画脚; 特朗普:愿降低对华关税换TikTok出售; 朝鲜公布新型无人机画面，金正恩: AI无人机将在战场发挥威力; 韩国史上最严重山火已致28人死亡，过火面积超半个首尔; 欧盟督促公民囤积72小时物资应对危机，将提出覆盖整个欧盟的物资储备战略; 马克龙宣布向乌克兰额外提供20亿欧元军事援助; 以军证实打死哈马斯发言人; 【微语】一切好的东西都经得起时间的推敲。花有花期，人有时运，怀爱与诚，静等来日。 题型整理 图形推理题 ","date":"2025-03-24T16:32:36+08:00","image":"https://skyhaibara.github.io/Cover/CL.webp","permalink":"https://skyhaibara.github.io/p/%E8%80%83%E5%85%AC%E7%AC%94%E8%AE%B0ing/","title":"考公笔记ing"},{"content":"","date":"2025-03-14T23:02:28+08:00","image":"https://skyhaibara.github.io/Cover/ai.webp","permalink":"https://skyhaibara.github.io/p/haibara/","title":"Haibara"},{"content":"zyt大佬捏：horostal.github.io\nPisano 周期 2n+2 = b * un+1 + c * un\n1 2 3 4 5 6 7 8 9 #sage g = 17665922529512695488143524113273224470194093921285273353477875204196603230641896039854934719468650093602325707751568 mod = 100000007 R = BinaryRecurrenceSequence(6,1) #计算序列的周期 cycle = R.period(mod) print(R(g%cycle)%mod) #output :41322239 Virgenene(维吉尼亚) 取一个长度为$x$的$key$，则在每一个长度为$x$的明文区间内，每一个字母本身都在进行凯撒式移位加密。例如选取$key$为vector，则对应数字为(21, 4, 2, 19, 14, 17)，之后对明文进行加密：\n1 2 3 (明文) h e r e i s h o w i t w o r k s (密钥) 21 4 2 19 14 17 21 4 2 19 14 17 21 4 2 19 (密文) c i t x w j c s y b h n j v m l 那如果有密文，可以通过猜测明文前几位算出$key$，找到循环点并截取出正确的$key$，在进行解密即可。推荐一个爆破维吉尼亚的网站：https://www.guballa.de/vigenere-solver，下面是自己手撸的加解密和猜测密钥。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 def encode(plaintext, key): li = [] j = 0 for i in range(len(plaintext)): if \u0026#39;a\u0026#39; \u0026lt;= plaintext[i] \u0026lt;= \u0026#39;z\u0026#39;: li.append(chr((ord(plaintext[i]) - ord(\u0026#39;a\u0026#39;) + ord(key[j].lower()) - ord(\u0026#39;a\u0026#39;)) % 26 + ord(\u0026#39;a\u0026#39;))) j = (j + 1) % len(key) elif \u0026#39;A\u0026#39; \u0026lt;= plaintext[i] \u0026lt;= \u0026#39;Z\u0026#39;: li.append(chr((ord(plaintext[i]) - ord(\u0026#39;A\u0026#39;) + ord(key[j].upper()) - ord(\u0026#39;A\u0026#39;)) % 26 + ord(\u0026#39;A\u0026#39;))) j = (j + 1) % len(key) else: li.append(plaintext[i]) print(\u0026#39;\u0026#39;.join(li)) # print(\u0026#39;\u0026#39;.join([chr((ord(st[i]) - ord(\u0026#39;a\u0026#39;) + ord(s[i % len(s)]) - ord(\u0026#39;a\u0026#39;)) % 26 + ord(\u0026#39;a\u0026#39;)) for i in range(len(st))])) def decode(ciphertext, key): li = [] j = 0 for i in range(len(ciphertext)): if \u0026#39;a\u0026#39; \u0026lt;= ciphertext[i] \u0026lt;= \u0026#39;z\u0026#39;: li.append(chr((ord(ciphertext[i]) - ord(key[j].lower())) % 26 + ord(\u0026#39;a\u0026#39;))) j = (j + 1) % len(key) elif \u0026#39;A\u0026#39; \u0026lt;= ciphertext[i] \u0026lt;= \u0026#39;Z\u0026#39;: li.append(chr((ord(ciphertext[i]) - ord(key[j].upper())) % 26 + ord(\u0026#39;A\u0026#39;))) j = (j + 1) % len(key) else: li.append(ciphertext[i]) print(\u0026#39;\u0026#39;.join(li)) # print(\u0026#39;\u0026#39;.join([chr((ord(t[i]) - ord(\u0026#39;a\u0026#39;) - ord(s[i % len(s)]) + ord(\u0026#39;a\u0026#39;)) % 26 + ord(\u0026#39;a\u0026#39;)) for i in range(len(t))])) def check(plaintext, ciphertext): t = min(len(plaintext), len(ciphertext)) li = [] for i in range(t): if \u0026#39;a\u0026#39; \u0026lt;= ciphertext[i] \u0026lt;= \u0026#39;z\u0026#39;: li.append(chr((ord(ciphertext[i]) - ord(plaintext[i].lower())) % 26 + ord(\u0026#39;a\u0026#39;))) elif \u0026#39;A\u0026#39; \u0026lt;= ciphertext[i] \u0026lt;= \u0026#39;Z\u0026#39;: li.append(chr((ord(ciphertext[i]) - ord(plaintext[i].upper())) % 26 + ord(\u0026#39;A\u0026#39;))) else: continue return \u0026#39;\u0026#39;.join(li) # \u0026#39;\u0026#39;.join([chr((ord(ciphertext[i]) - ord(plaintext[i])) % 26 + ord(\u0026#39;a\u0026#39;)) for i in range(t)]) ","date":"2025-03-13T18:00:00+08:00","image":"https://skyhaibara.github.io/Cover/Zs.webp","permalink":"https://skyhaibara.github.io/p/ctf-crypto/","title":"CTF Crypto"},{"content":"Misc Kali（Linux系统） extundelete 1 2 3 4 5 6 7 8 9 10 # 在linux上挂载光盘的命令 mkdir /mnt/disk mount attachment.img /mnt/disk/ cd /mnt/disk #可以使用 eog 图片名 命令来查看图片 #使用结束后用 umount: /mnt/disk #命令取消挂载 extundelete --restore-all attachment.img # 数据恢复成功后会生成一个 RECOVERED_FILES 文件 压缩包套娃 1 2 while [ \u0026#34;find . -type f -name \u0026#39;*.tar.xz\u0026#39; | wc -l\u0026#34; -gt 0 ]; do find -type f -name \u0026#34;*.tar.xz\u0026#34; -exec tar xf \u0026#39;{}\u0026#39; \\; -exec rm -- \u0026#39;{}\u0026#39; \\;; done; strings flag 查找flag字符 LSB（老色比） 1 2 3 4 5 zsteg -e \u0026#34;b8,rgb,lsb,xy\u0026#34; 1.png \u0026gt; diskimage.dat testdisk : testdisk diskimage.dat C to copy the selected files, c to copy the current file Traffic（流量） SMTP TLS 1 2 3 4 5 -----BEGIN RSA PRIVATE KEY----- XXXXXXX -----END RSA PRIVATE KEY----- wireshark 编辑即可 SMB+hascat 省赛的题目复现，讲一下自己的理解 olevba Code（编码） 猪圈密码： 多类变种 圣堂武士密码（猪圈密码的变种）： 小猫密码： 五笔密码： 提瓦特大陆： 古埃及象形文字： 外星人密码： 克林贡语密码《星际迷航》： 元素周期表： 狄德拉字符(暗精灵活神)： 银河字母(游戏《指挥官基恩》)： 跳舞的小人： 旗语密码： 国际船用信号旗： 夏多密码（又称曲折密码）: 在以上所示的字母表密钥的底部，列有四个附加符号1，2，3，4.他们可以放在密文中的任何地方。每个附加符号指示，如何转动写有密文的纸张，再进行后续的加密或解密操作，直到出现另一个附加符号。 可以把每个附加符号中的那根线看作是指示针，它指示了纸张的上端朝上，朝下，朝左，朝右。比如说： 如果出现符号3，那么纸张就应该转动180度，使其上端朝下； 符号2表示纸张上端朝右； 符号4表示纸张上端朝左； 符号1表示纸张上端朝上\n多斯拉克语字母表： 海利亚文字： Covenant字体： top cipher: exp:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 cipherList = {\u0026#39;M\u0026#39;:\u0026#39;ACEG\u0026#39;,\u0026#39;R\u0026#39;:\u0026#39;ADEG\u0026#39;,\u0026#39;K\u0026#39;:\u0026#39;BCEG\u0026#39;,\u0026#39;S\u0026#39;:\u0026#39;BDEG\u0026#39;,\u0026#39;A\u0026#39;:\u0026#39;ACEH\u0026#39;,\u0026#39;B\u0026#39;:\u0026#39;ADEH\u0026#39;,\u0026#39;L\u0026#39;:\u0026#39;BCEH\u0026#39;,\u0026#39;U\u0026#39;:\u0026#39;BDEH\u0026#39;,\u0026#39;D\u0026#39;:\u0026#39;ACEI\u0026#39;,\u0026#39;C\u0026#39;:\u0026#39;ADEI\u0026#39;,\u0026#39;N\u0026#39;:\u0026#39;BCEI\u0026#39;,\u0026#39;V\u0026#39;:\u0026#39;BDEI\u0026#39;,\u0026#39;H\u0026#39;:\u0026#39;ACFG\u0026#39;,\u0026#39;F\u0026#39;:\u0026#39;ADFG\u0026#39;,\u0026#39;O\u0026#39;:\u0026#39;BCFG\u0026#39;,\u0026#39;W\u0026#39;:\u0026#39;BDFG\u0026#39;,\u0026#39;T\u0026#39;:\u0026#39;ACFH\u0026#39;,\u0026#39;G\u0026#39;:\u0026#39;ADFH\u0026#39;,\u0026#39;P\u0026#39;:\u0026#39;BCFH\u0026#39;,\u0026#39;X\u0026#39;:\u0026#39;BDFH\u0026#39;,\u0026#39;E\u0026#39;:\u0026#39;ACFI\u0026#39;,\u0026#39;I\u0026#39;:\u0026#39;ADFI\u0026#39;,\u0026#39;Q\u0026#39;:\u0026#39;BCFI\u0026#39;,\u0026#39;Y\u0026#39;:\u0026#39;BDFI\u0026#39;} flag1 = \u0026#34;\u0026#34; # s = \u0026#39;BCEHACEIBDEIBDEHBDEHADEIACEGACFIBDFHACEGBCEHBCFIBDEGBDEGADFGBDEHBDEGBDFHBCEGACFIBCFGADEIADEIADFH\u0026#39; # for i in range(0,len(s),4): # block = s[i:i+4] # for j in cipherList: # if block==cipherList[j]: # flag1 += j # print(flag1) s2 = \u0026#34;LDVUUCMEXMLQSSFUSXKEOCCG\u0026#34; cipherList2 = [\u0026#39;M\u0026#39;, \u0026#39;R\u0026#39;, \u0026#39;K\u0026#39;, \u0026#39;S\u0026#39;, \u0026#39;A\u0026#39;, \u0026#39;B\u0026#39;, \u0026#39;L\u0026#39;, \u0026#39;U\u0026#39;, \u0026#39;D\u0026#39;, \u0026#39;C\u0026#39;, \u0026#39;N\u0026#39;, \u0026#39;V\u0026#39;, \u0026#39;H\u0026#39;, \u0026#39;F\u0026#39;, \u0026#39;O\u0026#39;, \u0026#39;W\u0026#39;, \u0026#39;T\u0026#39;, \u0026#39;G\u0026#39;, \u0026#39;P\u0026#39;, \u0026#39;X\u0026#39;, \u0026#39;E\u0026#39;, \u0026#39;I\u0026#39;, \u0026#39;Q\u0026#39;, \u0026#39;Y\u0026#39;] # cipherList2.reverse() cipherList3 = [\u0026#39;Y\u0026#39;, \u0026#39;Q\u0026#39;, \u0026#39;I\u0026#39;, \u0026#39;E\u0026#39;, \u0026#39;X\u0026#39;, \u0026#39;P\u0026#39;, \u0026#39;G\u0026#39;, \u0026#39;T\u0026#39;, \u0026#39;W\u0026#39;, \u0026#39;O\u0026#39;, \u0026#39;F\u0026#39;, \u0026#39;H\u0026#39;, \u0026#39;V\u0026#39;, \u0026#39;N\u0026#39;, \u0026#39;C\u0026#39;, \u0026#39;D\u0026#39;, \u0026#39;U\u0026#39;, \u0026#39;L\u0026#39;, \u0026#39;B\u0026#39;, \u0026#39;A\u0026#39;, \u0026#39;S\u0026#39;, \u0026#39;K\u0026#39;, \u0026#39;R\u0026#39;, \u0026#39;M\u0026#39;] flag2 = \u0026#39;\u0026#39; for i in s2: for j in cipherList2: if i==j: rank = cipherList2.index(j) flag2 += cipherList3[rank] print(flag2) DTMF键盘 Matlab -\u0026gt; Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 fid=fopen(\u0026#39;33.wav\u0026#39;,\u0026#39;rb\u0026#39;); a=fread(fid,inf,\u0026#39;uchar\u0026#39;);\tn=length(a)-44; fclose(fid); io=imread(\u0026#39;kkk.bmp\u0026#39;);\t[row col]=size(io);\t# 返回图像尺寸 wi=io(:);\t# 二维转一维 if row*col\u0026gt;n error(\u0026#39;文件太小\u0026#39;);\t# 要隐写的目的文件要够大 end watermarkedaudio=a; watermarklength=row*col; for k=1:row*col\t# 从1到row*col watermarkedaudio(44+k)=bitset(watermarkedaudio(44+k),1,wi(k)); end figure; subplot(2,1,1);plot(a); subplot(2,1,2);plot(watermarkedaudio); fid = fopen(\u0026#39;2.wav\u0026#39;, \u0026#39;wb\u0026#39;); fwrite(fid,watermarkedaudio,\u0026#39;uchar\u0026#39;); fclose(fid); fread : 从二进制文件读取数据 inf : 读出fid指向的打开的文件的全部数据 imread : 读取图像 bitset(A,pos,V) ：将A以二进制来表示，并将第pos个位置（从右数）， 设置为 V 的值，在将所得到的值转换成10进制数并返回。 figure ：使用默认属性值创建一个新的图窗窗口 subplot ：将当前图窗划分为 m×n 网格，并在 p 指定的位置创建坐标区 plot ( Y ) 绘制 Y 对一组隐式 x 坐标的图。 如果 Y 是向量，则 x 坐标范围从 1 到 length( Y )。 如果 Y 是矩阵，则对于 Y 中的每个列，图中包含一个对应的行。x 坐标的范围是从 1 到 Y 的行数。 1 2 3 4 5 6 7 8 9 10 11 12 13 import numpy as np from PIL import Image wav = open(\u0026#39;aaa.wav\u0026#39;,\u0026#39;rb\u0026#39;) content = wav.read() wav.close() bins = [] for i in range(45,45+388*100): bins.append(255 if int(bin(content[i])[-1:]) else 0) flag = np.array(bins,np.uint8).reshape(388,100) imgg = Image.fromarray(flag).save(\u0026#39;res.bmp\u0026#39;) Excel 将表格全选，选择菜单栏中的， 表单格式 =\u0026gt; 突出显示单元格规则 =\u0026gt; 文本包含 ##pwntools\n1 2 3 4 5 6 7 8 9 send(data): 发送数据 sendline(data) : 发送一行数据，相当于在末尾加\u0026#39;\\n\u0026#39; recv(numb=4096, timeout=default) : 给出接收字节数,timeout指定超时 recvuntil(delims, drop=False) : 接收到delims的pattern （以下可以看作until的特例） recvline(keepends=True) : 接收到\u0026#34;\\n，keepends指定保留\\n\u0026#34; recvall() : 接收到EOF recvrepeat(timeout=default) : 接收到EOF或timeout interactive() : 与shell交互 相关工具使用 basecrack4.0v 1 basecrack.py -m 自动化处理 Mimikatz \u0026ndash;dmp文件 1 2 sekurlsa::minidump lsass.dmp --加载 sekurlsa::logonpasswords full --导出密码散列值 ","date":"2025-03-06T18:00:00+08:00","image":"https://skyhaibara.github.io/Cover/Mc.webp","permalink":"https://skyhaibara.github.io/p/ctf-misc/","title":"CTF Misc"}]